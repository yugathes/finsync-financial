name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Testing and Building
  backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: finsync_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: ./server

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript compilation check
      run: npm run check
    
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finsync_test
        NODE_ENV: test
    
    - name: Build backend
      run: npm run build

  # Frontend Testing and Building  
  frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./client

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript compilation check
      run: npm run check
    
    - name: Build frontend
      run: npm run build

  # Docker Build Test
  docker-build:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        file: ./server/Dockerfile
        push: false
        tags: finsync-backend:test
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        file: ./client/Dockerfile
        push: false
        tags: finsync-frontend:test

  # Integration Test with Docker Compose
  integration-test:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    
    - name: Create .env file
      run: |
        cat > .env << EOF
        NODE_ENV=test
        DATABASE_NAME=finsync_test
        DATABASE_USER=postgres
        DATABASE_PASSWORD=postgres
        LOG_LEVEL=error
        EOF
    
    - name: Start services
      run: docker-compose up -d database
    
    - name: Wait for database
      run: |
        timeout 60s sh -c 'until docker-compose exec -T database pg_isready -U postgres; do sleep 2; done'
    
    - name: Health check
      run: |
        # Add integration tests here
        echo "Integration tests would run here"
    
    - name: Stop services
      run: docker-compose down